//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

#define U_MOUSE_MOVE_MAX 1400
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 100
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

&mwh {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <25>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_PP {
            timeout-ms = <25>;
            key-positions = <4 5>;
            bindings = <&kp C_PP>;
        };

        combo_EXCLAMATION {
            timeout-ms = <25>;
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 2>;
        };

        combo_AT_SIGN {
            timeout-ms = <25>;
            bindings = <&kp AT_SIGN>;
            key-positions = <2 3>;
        };

        combo_HASH {
            timeout-ms = <25>;
            bindings = <&kp HASH>;
            key-positions = <1 13>;
        };

        combo_DOLLAR {
            timeout-ms = <25>;
            bindings = <&kp DOLLAR>;
            key-positions = <13 3>;
        };

        combo_PERCENT {
            timeout-ms = <25>;
            bindings = <&kp PERCENT>;
            key-positions = <1 3>;
        };

        combo_CARET {
            timeout-ms = <25>;
            bindings = <&kp CARET>;
            key-positions = <6 8>;
        };

        combo_AMPERSAND {
            timeout-ms = <25>;
            bindings = <&kp AMPERSAND>;
            key-positions = <6 18>;
        };

        combo_ASTERISK {
            timeout-ms = <25>;
            bindings = <&kp ASTERISK>;
            key-positions = <18 8>;
        };

        combo_LEFT_PARENTHESIS {
            timeout-ms = <25>;
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        combo_RIGHT_PARENTHESIS {
            timeout-ms = <25>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        combo_VOLUME_UP {
            timeout-ms = <25>;
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <25 26>;
        };

        combo_VOLUME_DOWN {
            timeout-ms = <25>;
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <23 24>;
        };

        combo_MUTE {
            timeout-ms = <25>;
            bindings = <&kp C_MUTE>;
            key-positions = <24 25>;
        };

        combo_TO3 {
            timeout-ms = <25>;
            bindings = <&to 3>;
            key-positions = <37 38 27>;
        };

        combo_dash {
            timeout-ms = <25>;
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 9>;
        };

        combo_quote {
            timeout-ms = <25>;
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        combo_plus {
            timeout-ms = <25>;
            bindings = <&kp PLUS>;
            key-positions = <20 34>;
        };

        combo_multiply {
            timeout-ms = <25>;
            bindings = <&kp ASTERISK>;
            key-positions = <20 33>;
        };

        combo_equal {
            timeout-ms = <25>;
            bindings = <&kp EQUAL>;
            key-positions = <34 33>;
        };

        combo_no1 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_1>;
            key-positions = <42 31>;
        };

        combo_no2 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_2>;
            key-positions = <42 32>;
        };

        combo_no3 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_3>;
            key-positions = <42 33>;
        };

        combo_no4 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_4>;
            key-positions = <42 17>;
        };

        combo_no5 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_5>;
            key-positions = <42 18>;
        };

        combo_no6 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_6>;
            key-positions = <42 19>;
        };

        combo_no7 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_7>;
            key-positions = <42 6>;
        };

        combo_no8 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_8>;
            key-positions = <42 7>;
        };

        combo_no9 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_9>;
            key-positions = <42 8>;
        };

        combo_no0 {
            timeout-ms = <50>;
            bindings = <&kp NUMBER_0>;
            key-positions = <42 9>;
        };

        combo_leftscreen {
            timeout-ms = <25>;
            bindings = <&kp LC(LEFT)>;
            key-positions = <11 0>;
        };

        combo_rightscreen {
            timeout-ms = <25>;
            bindings = <&kp LC(RIGHT)>;
            key-positions = <4 15>;
        };

        combo_nexttrack {
            timeout-ms = <25>;
            bindings = <&kp C_NEXT>;
            key-positions = <24 25 26>;
        };

        combo_prevtrack {
            timeout-ms = <25>;
            bindings = <&kp C_PREV>;
            key-positions = <23 24 25>;
        };

        combo_changelang {
            timeout-ms = <30>;
            bindings = <&kp LC(SPACE)>;
            key-positions = <14 15 16 17>;
        };

        combo_up {
            timeout-ms = <25>;
            bindings = <&kp UP>;
            key-positions = <2 13>;
        };

        combo_down {
            timeout-ms = <25>;
            bindings = <&kp DOWN>;
            key-positions = <13 25>;
        };

        combo_left {
            timeout-ms = <25>;
            bindings = <&kp LEFT>;
            key-positions = <13 12>;
        };

        combo_right {
            timeout-ms = <25>;
            bindings = <&kp RIGHT>;
            key-positions = <13 14>;
        };

        combo_spaces {
            timeout-ms = <30>;
            bindings = <&kp LC(UP)>;
            key-positions = <0 4>;
        };

        combo_to0 {
            timeout-ms = <50>;
            bindings = <&to 0>;
            key-positions = <37 38>;
        };

        combo_screenshot {
            bindings = <&kp LG(LS(N4))>;
            key-positions = <0 23 9 34>;
        };

        combo_cmd_left {
            timeout-ms = <30>;
            bindings = <&kp LG(LEFT)>;
            key-positions = <0 2>;
        };

        combo_cmd_right {
            timeout-ms = <30>;
            bindings = <&kp LG(RIGHT)>;
            key-positions = <2 4>;
        };

        combo_to1 {
            bindings = <&to 1>;
            key-positions = <41 42>;
        };
    };

    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        BASE {
            // ┌───────────────────────────────────────────────────────────┐

            label = "BASE";

            // └───────────────────────────────────────────────────────────┘
            /*          
             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │    Q    │    W    │    E    │    R    │    T    │                    │    Y    │    U    │    I    │    O    │    P    │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │   TAB   │    A    │    S    │    D    │    F    │    G    │                    │    H    │    J    │    K    │    L    │    ;    │    '    │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │   SFT   │    Z    │    X    │    C    │    V    │    B    ││  MUTE  ││PLY/PSE ││    M    │    N    │    ,    │    .    │    /    │  ADJUST │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │  LOWER  │   CMD   │  SPACE  │  ENTER  ││  ENTER  │  LOWER  │  SPACE  │  OPTION │
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
              &kp Q         &kp W  &gqt LG(E) E  &gqt LG(R) R          &gqt LG(T) T                                 &kp Y      &gqt LG(U) U             &gqt LG(I) I                   &kp O                 &kp P
 &trans  &gqt TAB A         &kp S   &gqt LALT D   &gqt LGUI F          &gqt LCTRL G                      &gqt RIGHT_ALT H  &gqt RIGHT_GUI J             &gqt LG(K) K            &gqt LG(L) L  &gqt MINUS SEMICOLON  &trans
 &trans       &kp Z  &gqt LG(X) X  &gqt LG(C) C  &gqt LG(V) V          &gqt LG(B) B  &trans  &trans          &gqt LG(N) N             &kp M  &gqt LEFT_BRACKET COMMA  &gqt RIGHT_BRACKET DOT  &gqt BACKSLASH SLASH  &trans
                                       &kp LGUI    &kp LSHIFT  &gqt LS(ENTER) ENTER   &to 0  &trans  &gqt LG(SPACE) SPACE     &kp BACKSPACE                   &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        LOWER {
            // ┌───────────────────────────────────────────────────────────┐

            label = "LOWER";

            // └───────────────────────────────────────────────────────────┘
            /*          
             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │         │SCROLL_< │    ^    │SCROLL_> │SCROLL_^ │                    │         │         │         │         │         │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │         |         │    <    │    V    │    >    │SCROLL_V │                    │         │  LCLK   │   RCLK  │         │         │         │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │         │         │         │   COPY  │  PASTE  │         ││        ││        ││         │         │         │         │         │         │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │         ││         │   LCLK  │   RCLK  │         │
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
         &trans  &mwh SCROLL_LEFT    &mmv MOVE_UP  &mwh SCROLL_RIGHT    &mwh SCROLL_UP                     &trans     &trans  &trans  &trans  &trans
 &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &mwh SCROLL_DOWN                     &trans     &trans  &trans  &trans  &trans  &trans
 &trans  &trans            &trans    &gqt LG(C) C       &gqt LG(V) V            &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans
                                           &trans             &trans            &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        RAISE {
            // ┌───────────────────────────────────────────────────────────┐

            label = "RAISE";

            // └───────────────────────────────────────────────────────────┘
            /*           
             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │         │         │         │         │         │                    │         │         │         │         │         │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │         │         │         │         │         │         │                    │   LEFT  │  DOWN   │   UP    │  RIGHT  │         │         │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │         │         │         │         │         │         ││        ││        ││   HOME  │  END    │  PGUP   │  PGDN   │         │         │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │         ││         │         │         │         │
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
         &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        ADJUST {
            // ┌───────────────────────────────────────────────────────────┐

            label = "ADJUST";

            // └───────────────────────────────────────────────────────────┘
            /*           
             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │  BT_1   │   BT_2  │   BT_3  │   BT_4  │  BT_5   │                    │         │         │         │   -/_   │   =/+   │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │  BT_CLR │  BT_NXT │         │         │         │         │                    │         │         │    <    │    ^    │    >    │         │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │         │  BT_PRV │         │         │         │         ││        ││        ││         │         │         │    V    │         │         │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │         ││         │         │         │         │
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
         &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5                  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans    &bt BT_CLR        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
